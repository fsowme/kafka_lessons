- Брокер - сервер, который получает сообщения от продюсеров,сохраняет их и обрабатывает запросы от консьюмеров

- Топики (Topics) - логическое разделение потоков данных. Продюсеры отправляют в топики сообщения, а консьюмеры
    подписываются на топики. Топики делятся на несколько партиций (Partitions) и обрабатывают данные параллельно

- Партиции (Partitions) - каждое сообщение в топике записывается в определенную партицию. Эта ключевая особенность Kafka
    позволяет распределять нагрузку между несколькими брокерами и консьюмерами

- Смещение (Offset) - это уникальный идентификатор сообщения внутри партиции. Помогает консьюмерам понимать, какие
    сообщения они уже прочитали, а какие нет

- Продюсер может работать в синхронном и асинхронном режиме:
    - Синхронный - при отправке продюсер ждет подтверждения, что сообщение записано в лог (надежно, но медленно)
    - Асинхронный - продюсер не ждет ответа и продолжает отправку сообщений (быстро, но с риском потерь)

- Продюсер отправляет сообщение в заданный топик, если партиций несколько, то продюсер может выбрать в какую именно
    партицию отправить (иногда партицию определяет ключ, иногда случайным образом)

- Консьюмер подписывается на топик, читает и обрабатывает сообщения из топика, при успешной обработки консьюмер
    фиксирует (коммитит) смещение (так Kafka узнает какие сообщения прочитаны, Kafka хранит смещения для каждого
    консьюмера)

- Группа консьюмеров - совокупность консьюмеров, которые читают из одного или нескольких топиков

- Получение сообщений внутри группы:
    - Сообщения из одной партиции доставляются только одному консьюмеру
    - Консьюмер может читать из нескольких партиций
    - Если консьюмеров больше чем партиций, то незанятые консьюмеры простаивают
    - Если консьюмеров меньше чем партиций, то часть консьюмеров читает из нескольких партиций

- Разные группы консьюмеров работают независимо - одно и то же сообщение может быть обработано разными группами

- Группы помогают:
    - Масштабировать обработку сообщений - партиции распределяются между консьюмерами => каждый консьюмер получает часть
        данных для обработки => данные обрабатываются параллельно
    - Избежать дублирующей обработки - каждое сообщение обрабатывает только один консьюмер в группе
    - Изолировать потребление данных - разные группы могут потреблять одинаковые сообщения независимо друг от друга, это
        позволяет использовать одну и ту же информацию для разных целей в разных сервисах

- Ребалансировка (rebalance) - автоматическое распределение партиций между консьюмерами. Ребалансировка происходит при
    присоединении нового консьюмера к группе или при выходе существующего из строя

- Например есть топик с тремя партициями, продюсер отправляет в него сообщение:
    - группа из двух консьюмеров подписывается, kafka назначит одному консьюмеру две партиции, а другому одну
    - группа из трех консьюмеров подписывается, kafka назначит каждому консьюмеру по одной партиции
    - при изменении количества консьюмеров происходил ребалансировка
